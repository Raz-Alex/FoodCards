@using FoodCards.Client.Script
@using FoodCards.Shared

@*
	quant for nutrients
*@
@if(FoodItem != null)
{
	<div class="card" style=@Style()>
		<h3>@FoodItem.Name</h3>
		<div class="img-holder">
			<img src=@($"images/{FoodItem.Photo}") />
			<div class="img-caption"><h4>@caption</h4></div>
		</div>
		@if (nutrients != null)
		{
			<table>
				<tbody>
					<tr>
						<th>
							Calculated for
						</th>
						<td>
							100g
						</td>
					</tr>
					<tr>
						<th>
							Kalories
						</th>
						<td>
							@($"{FoodItem.Kalories}kcal")
						</td>
					</tr>
					@foreach(var item in nutrients)
					{
						@if(item.Value > 0)
						{
							<tr>
								<th>
									@item.Key
								</th>
								<td>
									@($"{item.Value}g")
								</td>
							</tr>
						}
					}
				</tbody>
			</table>
		}
	</div>
}

@code {
	[Parameter]
	public INutrition FoodItem { get; set; }

	Dictionary<string, decimal> nutrients;

	string caption;

	protected override void OnInitialized()
	{
		if (FoodItem == null)
			return;

		nutrients = new()
		{
			{"Protein",FoodItem.Protein},
			{"Fat",FoodItem.Fat},
			{"Sat. Fat",FoodItem.SaturatedFat},
			{"Carbs",FoodItem.Carbohydrate},
			{"Sugar",FoodItem.Sugar},
			{"Salt",FoodItem.Salt},
			{"Fiber",FoodItem.Fiber}
		};

		caption = Const.GetShortcut(FoodItem.Type);
	}

	string Style()
	{
		var data = Const.Get(FoodItem.Type);
		var css = $"background-image:{data.Gradient};border:{data.Border};";
		return css;
	}
}

<style>
	table{
		margin-top:0;
		width: 100%;
	}

	tr{
		height: 1.2rem
	}

	th{
		text-align:left
	}

	td {
		text-align: right
	}

	th, td{
		padding-inline: 0.5rem;
		font-size: 0.8rem;
	}

	.img-holder {
		width: 10rem;
		height: 10rem ;
		margin: auto;
		margin-top: 1rem;
		margin-bottom: 1rem;
		align-content: center;
		position: relative;
	}

	.img-caption {
		position: absolute;
		bottom: 0.1rem;
		right: 0.1rem;
	}

	img {
		max-width: 100%;
		max-height: 100%;
	}
</style>